package fpoly;

import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class testSauce {
    WebDriver driver;

    @BeforeClass
    public void setup() {
        System.setProperty("webdriver.chrome.driver", "D:\\FPT\\KTNC\\chromedriver-win64\\chromedriver.exe");
        driver = new ChromeDriver();
        String url = "https://www.saucedemo.com/";
        driver.get(url);
    }

    @BeforeMethod
    public void clearInput() {
        WebElement usernameField = driver.findElement(By.name("user-name"));
        WebElement passwordField = driver.findElement(By.name("password"));

        // Clear các trường input trước khi nhập liệu mới
        usernameField.clear();
        passwordField.clear();
    }

    @Test(priority = 1)
    public void testCase1() {
        // Đăng nhập vào trang web
        driver.findElement(By.name("user-name")).sendKeys("standard_user");
        driver.findElement(By.name("password")).sendKeys("secret_sauce");
        driver.findElement(By.name("login-button")).click();

        // Kiểm tra đăng nhập thành công bằng cách xác minh sự hiện diện của phần tử trên trang chủ
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(2));
        WebElement productsTitle = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("title")));
        Assert.assertTrue(productsTitle.isDisplayed(), "Login failed: Products title is not displayed");

        // Tìm và click vào button menu
        WebElement menuButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("react-burger-menu-btn")));
        menuButton.click();

        // Tìm và click vào button logout
        WebElement logoutButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("logout_sidebar_link")));
        logoutButton.click();
    }

    @Test(priority = 2)
    public void testCase2() {
        // Đăng nhập vào trang web với tài khoản bị khóa
        driver.findElement(By.name("user-name")).sendKeys("locked_out_user");
        driver.findElement(By.name("password")).sendKeys("secret_sauce");
        driver.findElement(By.name("login-button")).click();

        // Kiểm tra thông báo lỗi
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(2));
        WebElement errorMessage = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("[data-test='error']")));
        Assert.assertTrue(errorMessage.isDisplayed(), "Error message is not displayed for locked out user");
    }

    @Test(priority = 3)
    public void testCase3() {
        // Đăng nhập vào trang web với tài khoản có vấn đề
        driver.findElement(By.name("user-name")).sendKeys("problem_user");
        driver.findElement(By.name("password")).sendKeys("secret_sauce");
        driver.findElement(By.name("login-button")).click();

        // Kiểm tra đăng nhập thành công bằng cách xác minh sự hiện diện của phần tử trên trang chủ
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(2));
        WebElement productsTitle = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("title")));
        Assert.assertTrue(productsTitle.isDisplayed(), "Login failed: Products title is not displayed");

        // Tìm và click vào button menu
        WebElement menuButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("react-burger-menu-btn")));
        menuButton.click();

        // Tìm và click vào button logout
        WebElement logoutButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("logout_sidebar_link")));
        logoutButton.click();
    }

    @AfterClass
    public void teardown() {
        if (driver != null) {
            driver.quit();
        }
    }
}
